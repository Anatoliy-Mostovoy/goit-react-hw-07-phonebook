{"version":3,"sources":["Components/Contacts/Contacts.module.css","Components/Filter/Filter.module.css","App.module.css","redux/contacts/contacts-action.js","Components/Form/Form.js","Components/Contacts/Contacts.js","Components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","Components/Form/Form.module.css"],"names":["module","exports","getSubmitData","createAction","handleDelete","changeFilterValue","connect","dispatch","submitMethod","name","number","id","action","useState","setName","setNumber","setId","uniqId","uuidv4","handleClick","event","target","value","trim","resetState","className","s","Container","Form","onSubmit","preventDefault","Label","htmlFor","Input","type","pattern","title","required","onChange","Button","state","contacts","filter","contact","toLowerCase","includes","deleteFunction","map","List","onClick","evt","App","Title","contactsReducer","createReducer","actions","find","payload","toast","error","filterReducer","_","persistConfig","key","storage","blacklist","rootReducer","combineReducers","componentReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.13621a5d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"Contacts_List__2V3YO\",\"Button\":\"Contacts_Button__3WuIa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__1q_sH\",\"Input\":\"Filter_Input__2MQXK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"App_Title__2qxNr\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst getSubmitData = createAction('contacts/getSubmitData');\nconst handleDelete = createAction('contacts/handleDelete');\nconst changeFilterValue = createAction('contacts/changeFilterValue');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getSubmitData, handleDelete, changeFilterValue };\n\n// const getSubmitData = data => {\n//   return { type: actionTypes.SUBMIT, payload: data };\n// };\n// const handleDelete = data => {\n//   return {\n//     type: actionTypes.DELETE,\n//     payload: data,\n//   };\n// };\n// const changeFilterValue = value => {\n//   return {\n//     type: actionTypes.FILTER,\n//     payload: value,\n//   };\n// };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Form.module.css';\nimport { connect } from 'react-redux';\nimport action from '../../redux/contacts/contacts-action';\n\nconst Form = ({ submitMethod }) => {\n  Form.propTypes = {\n    submitMethod: PropTypes.func.isRequired,\n  };\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [id, setId] = useState('');\n\n  const uniqId = uuidv4();\n\n  const handleClick = event => {\n    const { value, name, id } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value.trim());\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n\n    setId(id);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    submitMethod({ name, number, id });\n    resetState();\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n    setId('');\n  };\n\n  return (\n    <div className={s.Container}>\n      <form className={s.Form} onSubmit={handleSubmit}>\n        <label className={s.Label} htmlFor={uniqId}>\n          Name\n          <input\n            className={s.Input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={handleClick}\n            id={uuidv4()}\n          />\n        </label>\n\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            className={s.Input}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleClick}\n            value={number}\n            id={uuidv4()}\n          />\n        </label>\n        <button type=\"submit\" className={s.Button}>\n          Отправить\n        </button>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProp = dispatch => {\n  return {\n    submitMethod: ({ name, number, id }) =>\n      dispatch(action.getSubmitData({ name, number, id })),\n  };\n};\n\nexport default connect(null, mapDispatchToProp)(Form);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\nimport { connect } from 'react-redux';\nimport action from '../../redux/contacts/contacts-action';\n\nconst Contacts = ({ contacts, deleteFunction }) => {\n  return (\n    <div>\n      <ul>\n        {contacts &&\n          contacts.map(contact => {\n            return (\n              <li className={s.List} key={contact.id}>\n                {contact.name}: {contact.number}\n                <button\n                  className={s.Button}\n                  type=\"button\"\n                  onClick={() => {\n                    deleteFunction(contact.id);\n                  }}\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  const { contacts, filter } = state;\n  const visibleContact = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\n  return {\n    contacts: visibleContact,\n  };\n};\n\nconst mapDispatchToProp = dispatch => {\n  return {\n    deleteFunction: id => {\n      return dispatch(action.handleDelete(id));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProp)(Contacts);\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteFunction: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport action from '../../redux/contacts/contacts-action';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={s.Label}>\n      Фильтр по имени:\n      <input\n        className={s.Input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    value: state.filter,\n  };\n};\n\nconst mapDispatchToProp = dispatch => {\n  return {\n    onChange: evt => dispatch(action.changeFilterValue(evt.target.value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProp)(Filter);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport Form from './Components/Form/Form';\nimport Contacts from './Components/Contacts/Contacts';\nimport Filter from './Components/Filter/Filter';\nimport s from './App.module.css';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const App = () => {\n  // useEffect(() => {\n  //   localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n\n  // useEffect(() => {\n  //   const contacts = localStorage.getItem('contacts');\n  //   const contactsPars = JSON.parse(contacts);\n  //   if (contactsPars) {\n  //     setContacts(contactsPars);\n  //   }\n  // }, []);\n\n  return (\n    <>\n      <h1 className={s.Title}>PhoneBook</h1>\n      <Form />\n      <h2 className={s.Title}>Contacts</h2>\n      <Filter />\n      <Contacts />\n      <ToastContainer />\n    </>\n  );\n};\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-action';\n\nconst contactsReducer = createReducer([], {\n  [actions.getSubmitData]: (state, action) => {\n    if (\n      state.find(\n        state => state.name.toLowerCase() === action.payload.name.toLowerCase(),\n      )\n    ) {\n      toast.error('Hey, this name always here!');\n      return [...state];\n    }\n    return [...state, action.payload];\n  },\n\n  [actions.handleDelete]: (state, action) => {\n    return state.filter(state => state.id !== action.payload);\n  },\n});\n\nconst filterReducer = createReducer('', {\n  [actions.changeFilterValue]: (_, action) => {\n    return action.payload;\n  },\n});\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { contactsReducer, filterReducer };\n\n// import actionTypes from './contacts-types';\n// const contacts = [];\n// const contactsReducer = (state = contacts, action) => {\n//   switch (action.type) {\n// case actionTypes.SUBMIT:\n//   if (\n//     state.find(\n//       state =>\n//         state.name.toLowerCase() === action.payload.name.toLowerCase(),\n//     )\n//   ) {\n//     toast.error('Hey, this name always here!');\n//     return [...state];\n//   }\n//   return [...state, action.payload];\n\n//     case actionTypes.DELETE:\n//       return state.filter(state => state.id !== action.payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = '';\n\n// const filterReducer = (state = filter, action) => {\n//   switch (action.type) {\n//     case actionTypes.FILTER:\n//       return action.payload;\n//     default:\n//       return state;\n//   }\n// };\n","import { combineReducers } from 'redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport componentReducer from './contacts/contacts-reducer';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst rootReducer = combineReducers({\n  contacts: componentReducer.contactsReducer,\n  filter: componentReducer.filterReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nconst persistor = persistStore(store);\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n\n// import { createStore, applyMiddleware, combineReducers } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// const reducer = combineReducers({\n//   contacts: componentReducer.contactsReducer,\n//   filter: componentReducer.filterReducer,\n// });\n// const store = createStore(reducer, composeWithDevTools());\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Form_Container__2LBkn\",\"Label\":\"Form_Label__1q0Y-\",\"Input\":\"Form_Input__29dvv\",\"Button\":\"Form_Button__Zkrc7\"};"],"sourceRoot":""}